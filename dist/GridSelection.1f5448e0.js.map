{"version":3,"sources":["class/GridSelection.js"],"names":["GridSelection","selection","enable","on","store","event","ctrlKey","metaKey","stored","el","classList","remove","clearSelection","selectedCells","changed","added","removed","contains","add","focus","console","log","selected","keepSelection","selectedTd","selectedTh","forEach","tagName","push","length","SelectionArea","selectionAreaClass","selectionContainerClass","container","selectables","startareas","singleTap","allow","intersect","overlap","startThreshold","scrolling","speedDivider","manualSpeed","boundaries"],"mappings":"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","file":"GridSelection.1f5448e0.js","sourceRoot":"..","sourcesContent":["'use strict'\nexport default class GridSelection{\n    constructor(){}\n\n    static selectedCells;\n    static selectedTh;\n    static selectedTd;\n    static selection;\n\n    static initSelection(){\n        GridSelection.selection.enable();\n        // console.log(selection.getSelection())\n        GridSelection.selection.on('beforestart', ({store, event}) => {\n            if (!event.ctrlKey && !event.metaKey) {\n                // Unselect all elements\n                for (const el of store.stored) {\n                    el.classList.remove('cell-selected');\n                }\n                // Clear previous selection\n                GridSelection.selection.clearSelection();\n                GridSelection.selectedCells = [];\n            }\n\n            // Use this event to decide whether a selection should take place or not.\n            // For example if the user should be able to normally interact with input-elements you \n            // may want to prevent a selection if the user clicks such a element:\n        }).on('start', ({store, event}) => {\n\n            // Unselect all elements\n            for (const el of store.stored) {\n                el.classList.remove('cell-selected');\n            }\n            // Clear previous selection\n            GridSelection.selection.clearSelection();\n\n            // A selection got initiated, you could now clear the previous selection or\n            // keep it if in case of multi-selection.\n            // console.log('start', evt);\n        }).on('move', ({store: {changed: {added, removed}}, event}) => {\n\n            for(let el of added){\n                if(!el.classList.contains('cell-on-dblclick')){\n                    el.classList.add('cell-selected');\n                    el.focus();\n                }\n            }\n            console.log(removed)\n            for(let el of removed){\n                el.classList.remove('cell-selected');\n            }  \n        // Here you can update elements based on their state.\n        // console.log('move', evt);\n        }).on('stop', ({store: {selected}})=> {\n            GridSelection.selection.keepSelection();\n            GridSelection.selectedCells = [];\n            GridSelection.selectedTd = [];\n            GridSelection.selectedTh = [];\n            // Do something with the selected elements.\n            selected.forEach(el=>{\n                if(el.tagName === 'TH' && !el.classList.contains('cell-on-dblclick')){\n                GridSelection.selectedTh.push(el)\n                }\n                if(el.tagName === 'TD' && !el.classList.contains('cell-on-dblclick')){\n                GridSelection.selectedTd.push(el)\n                }\n            })\n\n            if(GridSelection.selectedTh.length && GridSelection.selectedTd.length){\n                GridSelection.selectedCells.push(...GridSelection.selectedTh);\n                GridSelection.selectedCells.push(...GridSelection.selectedTd);\n            }\n            if(!GridSelection.selectedTh.length && GridSelection.selectedTd.length){\n                GridSelection.selectedCells.push(...GridSelection.selectedTd);\n            }\n            if(GridSelection.selectedTh.length && !GridSelection.selectedTd.length){\n                GridSelection.selectedCells.push(...GridSelection.selectedTh);\n            }\n        });\n    }\n\n    static selectionSettings(){\n        GridSelection.selection = new SelectionArea({\n\n            // Class for the selection-area itself (the element).\n            selectionAreaClass: 'selection-area',\n          \n            // Class for the selection-area container.\n            selectionContainerClass: 'selection-area-container',\n          \n            // Query selector or dom-node to set up container for the selection-area element.\n            container: '.table-grid-wrapper',\n          \n            // document object - if you want to use it within an embed document (or iframe).\n          \n            // Query selectors for elements which can be selected.\n            selectables: ['td', 'th'],\n          \n            // Query selectors for elements from where a selection can be started from.\n            startareas: ['h3', '.cell-text'],\n          \n\n            // Configuration in case a selectable gets just clicked.\n            singleTap: {\n    \n                // Enable single-click selection (Also disables range-selection via shift + ctrl).\n                allow: false,\n                intersect: 'native'\n            },\n            // Specifies what should be done if already selected elements get selected again.\n            //   invert: Invert selection for elements which were already selected\n            //   keep: Keep selected elements (use clearSelection() to remove those)\n            //   drop: Remove stored elements after they have been touched\n            overlap: 'invert',\n            // On which point an element should be selected.\n            // Available modes are cover (cover the entire element), center (touch the center) or\n            // the default mode is touch (just touching it).\n            intersect: 'touch',\n    \n            // px, how many pixels the point should move before starting the selection (combined distance).\n            // Or specifiy the threshold for each axis by passing an object like {x: <number>, y: <number>}.\n            startThreshold: 10,\n    \n            // Scroll configuration.\n            scrolling: {\n    \n                // On scrollable areas the number on px per frame is devided by this amount.\n                // Default is 10 to provide a enjoyable scroll experience.\n                speedDivider: 10,\n    \n                // Browsers handle mouse-wheel events differently, this number will be used as \n                // numerator to calculate the mount of px while scrolling manually: manualScrollSpeed / scrollSpeedDivider.\n                manualSpeed: 750\n            },\n            // Query selectors for elements which will be used as boundaries for the selection.\n            boundaries: ['.table-grid-wrapper']\n        })\n    }\n}"]}